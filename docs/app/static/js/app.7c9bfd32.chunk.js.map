{"version":3,"sources":["constants/Layout.ts","constants/PhoneNumbers.ts","constants/Routes.ts","constants/Styles.ts","context/ThemeManager.tsx","components/AddToHomeScreen.tsx","components/Themed.tsx","svgs/About.tsx","svgs/Caret.tsx","svgs/Cross.tsx","svgs/Community.tsx","svgs/Hand.tsx","svgs/Homelessness.tsx","svgs/Home.tsx","svgs/Legal.tsx","svgs/Logo.tsx","svgs/MentalHealth.tsx","svgs/Phone.tsx","svgs/Noise.tsx","svgs/Not911.tsx","svgs/Poison.tsx","svgs/Settings.tsx","svgs/Violence.tsx","components/RowLink.tsx","screens/NotFoundScreen.tsx","screens/HomeScreen.tsx","screens/AboutScreen.tsx","screens/SettingsScreen.tsx","navigation/BottomTabNavigator.tsx","navigation/LinkingConfiguration.ts","screens/PhoneNumberListScreen/index.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["width","Dimensions","get","PhoneNumbers","height","violence","crisis","display","tags","tel","hours","website","text","mentalhealth","immigration","homelessness","legal","poison","Routes","btn","params","section","title","Styles","black","white","gray","blue","orange","separator","background","tint","tabIconDefault","tabIconSelected","light","dark","deferredPrompt","osTheme","Appearance","getColorScheme","ManageThemeContext","React","createContext","mode","theme","toggle","useTheme","useContext","ThemeManager","state","toggleTheme","a","async","newMode","AsyncStorage","setItem","setState","getItem","savedMode","this","Provider","value","props","children","Component","useThemeColor","colorName","colorFromProps","Text","bold","style","lightColor","darkColor","otherProps","color","fontFamily","View","backgroundColor","AddToHomeScreen","showInstallPrompt","window","addEventListener","ev","console","log","preventDefault","Constants","platform","web","TouchableOpacity","styles","touchable","onPress","prompt","PureComponent","StyleSheet","create","bottom","left","right","position","zIndex","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","alignItems","flexDirection","paddingVertical","flex","fontWeight","fontSize","lineHeight","textAlign","About","memo","viewBox","fill","cx","cy","r","stroke","strokeWidth","x","y","rx","Caret","d","strokeLinecap","strokeLinejoin","Cross","Hand","Homelessness","id","mask","Home","fillRule","transform","xlinkHref","Legal","Logo","clipRule","MentalHealth","Phone","maskUnits","Poison","Settings","Violence","RowLink","isLast","route","row","navigation","navigate","includeIcon","marginRight10","marginRight","NotFoundScreen","container","replace","link","linkText","justifyContent","padding","marginTop","HomeScreen","ScrollView","showsVerticalScrollIndicator","danger","dangerTxt","Linking","dangerBtn","phoneWrap","dangerBtnTxt","innerView","map","i","key","length","marginBottom","alignSelf","borderRadius","community","paddingTop","communityTxt","marginBottom15","marginBottom30","marginVertical30","marginVertical","marginBottom40","trusted","AboutScreen","paragraph","marginBottom60","builtBy","SettingsScreen","useState","isEnabled","setIsEnabled","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","previousState","minHeight","BottomTab","createBottomTabNavigator","BottomTabNavigator","Navigator","initialRouteName","tabBarOptions","activeTintColor","Screen","name","component","TabOneNavigator","options","tabBarIcon","TabTwoNavigator","TabThreeNavigator","TabOneStack","createStackNavigator","headerTitle","headerStyle","borderBottomColor","borderBottomWidth","headerTintColor","TabTwoStack","TabThreeStack","prefixes","config","screens","Root","PhoneNumberList","PhoneNumberListScreen","NotFound","numbers","Array","sortedNumbers","sort","entry","backBtn","rotate","item","centerTxt","paddingBottom","paddingLeft","paddingTop30","marginHorizontal","paddingHorizontal","phone","Navigation","colorScheme","NavigationContainer","linking","LinkingConfiguration","DefaultTheme","DarkTheme","RootNavigator","Stack","screenOptions","headerShown","AppComponent","isLoadingComplete","setLoadingComplete","SplashScreen","Font","Ionicons","font","require","warn","useCachedResources","useFonts","Inter_400Regular","Inter_700Bold","fontsLoaded","StatusBar","App","navigator","serviceWorker","register","scope","then","info","catch","error","module","exports"],"mappings":"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","file":"static/js/app.7c9bfd32.chunk.js","sourcesContent":["import { Dimensions } from 'react-native';\n\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;\n\nexport const Layout = {\n  window: {\n    height,\n    width,\n  },\n  isSmallDevice: width < 375,\n};\n","type Props = {\n  [key: string]: {\n    crisis?: true,\n    display: string,\n    hours?: string,\n    is24Hr?: true,\n    tags?: string[],\n    tel?: string,\n    text?: string,\n    website?: string,\n    voicemail?: true,\n  }[];\n};\n\nexport const PhoneNumbers: Props = {\n  violence: [{\n    crisis: true,\n    display: 'Safe Horizons 24hr Domestic Violence Hotline',\n    tags: [\n      'Domestic Violence',\n      'Temporary Housing',\n      'Emergency Shelter',\n      'Counseling',\n      'Multilingual',\n    ],\n    tel: '1-800-621–4673',\n    hours: '24 Hour Access',\n  }, {\n    display: 'Safe Horizons Citywide General Helpline',\n    hours: 'Mon-Fri. 9AM - 5PM',\n    tags: ['Accepts Voicemail', 'Multilingual', 'Lock Changes'],\n    tel: '1-855-234-1042',\n  }, {\n    display: 'Safe Horizons Rape & Sexual Assault Victims Hotline',\n    hours: '24 Hour Access',\n    tags: ['Crisis counseling', 'Safety planning', 'General Information', 'Multilingual'],\n    tel: '1-855-234-1042',\n    website: 'https://www.safehorizon.org/get-help/rape-and-sexual-assault',\n  }, {\n    crisis: true,\n    display: 'NYC Gay and Lesbian Anti-Violence Project',\n    tel: '212-714-1141',\n    hours: '24 Hour Access',\n  }, {\n    crisis: true,\n    display: 'Violence Intervention Program',\n    tel: '1-800-664-5880',\n    hours: '24 Hour Access',\n  }, {\n    crisis: true,\n    display: 'National Domestic Violence Hotline',\n    tel: '1-800-799-7233',\n    text: 'or text LOVEIS to 1-866-331-9474',\n    hours: '24 Hour Access',\n  }],\n\n  mentalhealth: [{\n    crisis: true,\n    display: \"NYC Well\",\n    hours: '24 Hour Access',\n    tags: [\n      'Mobile Mental Health Crisis Team can respond within 48 hours',\n      '711 (TTY for hearing impaired)',\n      'Spanish, Mandarin and Cantonese Available',\n      'Anxiety',\n      'Counseling',\n      'Follow-up service',\n      'Mental Health Crisis',\n      'Suicide Prevention',\n      'Addiction',\n      'Outpatient Detox',\n    ],\n    tel: \"1-888-692-9355\",\n    text: 'or text WELL to 65173',\n  }, {\n    display: 'NY State Emotional Support Helpline',\n    tags: ['Anxiety', 'Counseling', 'COVID-19'],\n    tel: '1-844-863-9314',\n  },\n  // {\n  //   display: 'NYS/Crisis Text Line Partnership',\n  //   hours: '24 Hour Access',\n  //   tags: ['Crisis', 'Counseling', 'COVID-19'],\n  //   text: 'Text GOT5 to 741741',\n  // },\n  {\n    display: 'SAMHSA Disaster Distress National Helpline',\n    hours: '24 Hour Access',\n    tags: ['Post-Disaster', 'Crisis', 'Emotional Distress', 'Trauma', 'COVID-19', 'Unrest', 'Spanish'],\n    tel: '1-800-985-5990',\n    text: 'or text TalkWithUs or Hablanos to 66746',\n    website: 'https://www.samhsa.gov/find-help/disaster-distress-helpline',\n  }],\n\n  immigration: [{\n    display: \"ActionNYC Free Immigration Issues Hotline\",\n    tel: \"1-800-354-0365\",\n  }],\n\n  homelessness: [{\n    display: \"Homelessness Prevention Administration Hotline\",\n    tags: ['Eviction prevention', 'Legal Assistance', 'Cash Assistance'],\n    tel: \"718-557-1399\",\n    website: 'https://www1.nyc.gov/site/hra/help/homelessness-prevention.page',\n  }, {\n    display: \"NYC Human Resources Administration's (HRA) Office of Civil Justice\",\n    tags: ['Eviction prevention', 'Legal Assistance'],\n    tel: \"718-557-1379\",\n    website: 'https://www1.nyc.gov/site/hra/help/legal-services-for-tenants.page',\n  }, {\n    hours: '24 Hour Access',\n    display: \"311 (Ask for Tenant Helpline)\",\n    tags: ['Eviction prevention', 'Legal Assistance'],\n    tel: \"311\",\n  }, {\n    display: \"Safe Horizons Streetwork Project Youth Homelessness Hotline\",\n    hours: 'Mon, Tues, Thurs, Fri, 10AM–5PM',\n    tel: \"1-800-708-6600\",\n    tags: ['Overnight shelter', 'Up to age 25', ''],\n    website: 'https://www.safehorizon.org/get-help/homeless-youth/',\n  }, {\n    display: \"311 (Ask for homeless street outreach team)\",\n    hours: '24 Hour Access',\n    tags: [\n      'Request street outreach team',\n      'Homeless Outreach team can respond within 1 hour',\n    ],\n    tel: \"311\",\n    website: 'https://www1.nyc.gov/site/dhs/outreach/street-outreach.page',\n  }, {\n    display: 'The Door Runaway and Homeless Youth Services',\n    tags: [\n      'Use extension 3377 for homeless youth services',\n      'General Information',\n      'Counseling',\n      'Shelter referrals',\n    ],\n    tel: '212-941-9090',\n    website: 'https://door.org/programs-services/runaway-homeless-youth/',\n  }],\n\n  legal: [{\n    display: 'National Lawyer Guild Arrest Support Hotline',\n    tags: [\n      'Legal Support',\n      'Arrested at Political Demonstration',\n      'Witnessed an arrest',\n    ],\n    tel: '212-679-6018',\n    website: 'https://nlgnyc.org/',\n  },\n  // {\n  //   display: 'National Lawyer Guild Case Support Hotline',\n  //   tags: ['False arrest', 'Assault by NYPD'],\n  //   tel: '347-752-8070',\n  // },\n  {\n    display: 'Safe Horizon Crime Victim 24hr hotline',\n    hours: '24 Hour Access',\n    tags: ['Counseling', 'Assault by NYPD'],\n    tel: '1-866-689-4357',\n  }],\n\n  poison: [{\n    hours: '24 Hour Access',\n    display: \"NYC Poison Control Center\",\n    tags: [\n      \"Treatment Advice\",\n      \"General Information\",\n      \"Supports 150 languages\",\n      \"Registered Nurses & Pharmacists\"\n    ],\n    tel: \"212-764-7667\",\n  }, {\n    hours: '24 Hour Access',\n    display: \"SAMHSA (Substance Abuse and Mental Health Services Administration) National Helpline\",\n    tags: [\n      \"Local Referrals\",\n      \"Spanish Available\",\n      \"General Information\",\n    ],\n    tel: \"1-800-662-4357\",\n  }, {\n    crisis: true,\n    display: \"NYC Well\",\n    hours: '24 Hour Access',\n    tags: [\n      'Mobile Mental Health Crisis Team can respond within 48 hours',\n      '711 (TTY for hearing impaired)',\n      'Spanish, Mandarin and Cantonese Available',\n      'Anxiety',\n      'Counseling',\n      'Follow-up service',\n      'Mental Health Crisis',\n      'Suicide Prevention',\n      'Addiction',\n      'Outpatient Detox'\n    ],\n    tel: \"1-888-692-9355\",\n    text: 'or text WELL to 65173',\n  }, {\n    display: 'New York State Office of Addiction Services and Supports HOPEline',\n    hours: '24 Hour Access',\n    tags: [\n      'Substance Abuse',\n      'Gambling Addiction',\n      'General Information',\n      'Referrals',\n      'Multilingual support',\n    ],\n    tel: \"1-877-846-7369\",\n    text: 'or text HOPENY',\n  }],\n};\n","export const Routes = [\n  {\n    btn: {\n      display: 'Violence',\n    },\n    params: {\n      section: 'violence',\n      title: 'Violence Hotlines',\n    },\n  },\n  {\n    btn: {\n      display: 'Mental Health',\n    },\n    params: {\n      section: 'mentalhealth',\n      title: 'Mental Health Support and Crisis Hotlines',\n    },\n  },\n  {\n    btn: {\n      display: 'Homelessness',\n    },\n    params: {\n      section: 'homelessness',\n      title: 'Homelessness and Evictions Support',\n    },\n  },\n  // {\n  //   btn: {\n  //     display: 'Noise',\n  //   },\n  //   params: {\n  //     section: 'noise',\n  //     title: 'Noise and Nuisances',\n  //     additionalProps: 'test',\n  //   },\n  // },\n  // {\n  //   btn: {\n  //     display: 'Hate Crimes',\n  //   },\n  //   params: {\n  //     section: 'hatecrimes',\n  //     title: 'Report a Hate Crime',\n  //   },\n  // },\n  {\n    btn: {\n      display: 'Legal Support',\n    },\n    params: {\n      section: 'legal',\n      title: 'Arrested? Witness a false arrest or police brutality? Get support here',\n    },\n  },\n  {\n    btn: {\n      display: 'Drugs or Poisoning',\n    },\n    params: {\n      section: 'poison',\n      title: 'Poison Control or Substance Abuse Hotlines',\n    },\n  },\n  // {\n  //   btn: {\n  //     display: 'Immigration Support',\n  //   },\n  //   params: {\n  //     section: 'immigration',\n  //     title: 'Immigration Support Hotlines',\n  //   },\n  // }\n];\n","const tintColorLight = '#3333ff';\nconst tintColorDark = '#fff';\n\nexport const Styles = {\n  black: '#000',\n  white: '#fff',\n  gray: '#b9b9b9',\n  blue: '#3333ff',\n  orange: '#ff4d4a',\n  separator: {\n    height: 1,\n    width: '100%',\n  },\n  'no-preference': {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#3333ff',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","import React from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport {Appearance} from 'react-native-appearance';\nimport { AsyncStorage } from 'react-native';\n\nimport {Styles} from '../constants';\n// import useColorScheme from '../hooks/useColorScheme';\n\n// default colour scheme from OS\nconst osTheme = Appearance.getColorScheme() || 'light';\n\n// initiate context\nexport const ManageThemeContext: React.Context<any> = React.createContext({\n  mode: osTheme,\n  theme: Styles[osTheme],\n  toggle: () => {}\n});\n\n// define useTheme hook for functional components\nexport const useTheme = () => React.useContext(ManageThemeContext);\n\n/**\n * @description initializes theme based on OS theme - but allow for toggling\n */\nexport class ThemeManager extends React.Component<any, any> {\n  state = {\n    mode: osTheme,\n  };\n\n  async componentDidMount() {\n    try {\n      const savedMode = await AsyncStorage.getItem('theme');\n      if (savedMode\n          && savedMode !== this.state.mode) {\n        this.setState({\n          mode: savedMode,\n        });\n      }\n    } catch(err) {}\n  }\n\n  toggleTheme = async () => {\n    const {mode} = this.state;\n    let newMode = 'light';\n\n    if (mode === 'light') {\n      newMode = 'dark';\n    }\n\n    try {\n      await AsyncStorage.setItem('theme', newMode);\n      this.setState({\n        mode: newMode,\n      });\n    } catch (error) {}\n  }\n\n  render () {\n    return (\n      <ManageThemeContext.Provider\n        value={{\n          mode: this.state.mode,\n          theme: Styles[this.state.mode],\n          toggle: this.toggleTheme\n        }}>\n        {this.props.children}\n      </ManageThemeContext.Provider>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport Constants from 'expo-constants';\n\nimport { Styles } from '../constants';\nimport { View, Text } from '../components/Themed';\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: Array<string>;\n\n  readonly userChoice: Promise<{\n    outcome: 'accepted' | 'dismissed',\n    platform: string\n  }>;\n\n  prompt(): Promise<void>;\n}\n\nlet deferredPrompt: BeforeInstallPromptEvent;\n\n/**\n * @description Allows user to add web app to their phone home screen, regardless of OS\n */\nexport class AddToHomeScreen extends React.PureComponent<any> {\n  state = {\n    showInstallPrompt: true,\n  };\n\n  constructor(props: any) {\n    super(props);\n\n    window.addEventListener('beforeinstallprompt', ev => {\n      console.log('beforeinstallprompt in component called');\n      // Prevent Chrome 67 and earlier from automatically showing the prompt\n      ev.preventDefault();\n\n      // Stash the event so it can be triggered later.\n      deferredPrompt = ev as BeforeInstallPromptEvent;\n\n      this.setState({\n        showInstallPrompt: true,\n      });\n\n      // this.btnRef.addEventListener('click', (e) => {\n      //   // hide our user interface that shows our A2HS button\n      //   addBtn.style.display = 'none';\n      //   // Show the prompt\n      //   deferredPrompt.prompt();\n      //   // Wait for the user to respond to the prompt\n      //   deferredPrompt.userChoice.then((choiceResult) => {\n      //       if (choiceResult.outcome === 'accepted') {\n      //         console.log('User accepted the A2HS prompt');\n      //       } else {\n      //         console.log('User dismissed the A2HS prompt');\n      //       }\n      //       deferredPrompt = null;\n      //     });\n      // });\n    });\n  }\n\n\n  render() {\n    // if (!this.state.showInstallPrompt) return null;\n    if (!Constants?.platform?.web) return null;\n\n    return (\n      <TouchableOpacity\n        style={styles.touchable}\n        onPress={() => {\n          console.log('add to home screen clicked');\n          // @ts-ignore\n          deferredPrompt.prompt();\n        }}>\n        <View\n          lightColor=\"#555\"\n          darkColor=\"#555\"\n          style={styles.btn}>\n          <Text\n            lightColor={Styles.white}\n            darkColor={Styles.white}\n            style={styles.text}>\n            Add to Home screen\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  touchable: {\n    bottom: 50,\n    left: 0,\n    right: 0,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 99,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 16.00,\n    elevation: 24,\n  },\n  btn: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 14,\n    width: '100%',\n  },\n  text: {\n    flex: 1,\n    fontWeight: 'bold',\n    fontSize: 14,\n    lineHeight: 14,\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport {Styles} from '../constants';\nimport { useTheme } from '../context';\n\n/**\n * @description helper function for getting default styles below for light/dark schemes\n */\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Styles.light & keyof typeof Styles.dark\n) {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const colorFromProps = props[mode];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Styles[mode][colorName];\n  }\n}\n\ntype ThemeProps = {\n  bold?: true,\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\n/**\n * @description generic themed Text component. works just like the react native Text\n * but defaults to our font and uses the right dark/light color based on theme\n */\nexport function Text(props: TextProps) {\n  const { bold, style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, 'text');\n\n  let fontFamily = 'Inter_400Regular';\n  if (bold) {\n    fontFamily = 'Inter_700Bold';\n  }\n\n  return (\n    <DefaultText\n      style={[{ color, fontFamily, }, style]}\n      {...otherProps}\n    />\n  );\n}\n\n/**\n * @description generic themed View component. works just like the react native View\n * but uses the right dark/light color based on theme\n */\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({\n    light: lightColor,\n    dark: darkColor,\n  }, 'background');\n\n  return (\n    <DefaultView\n      style={[{ backgroundColor }, style]}\n      {...otherProps}\n    />\n  );\n}\n","import React, { memo } from \"react\";\nimport Svg, { Circle, Rect } from \"react-native-svg\";\n\nexport const About = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={22} height={22} viewBox=\"0 0 22 22\" fill=\"none\" {...props}>\n    <Circle cx={11} cy={11} r={10} stroke={props.color} strokeWidth={2} />\n    <Rect x={10} y={9} width={2} height={7} rx={1} fill={props.color} />\n    <Circle cx={11} cy={6} r={1} fill={props.color} />\n  </Svg>\n));\n","import React, { memo } from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const Caret = memo((props: React.SVGProps<SVGSVGElement> & {style?: any}) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n\n  return (\n    // @ts-ignore\n    <Svg\n      style={props.style}\n      width={9}\n      height={16}\n      fill=\"none\"\n      {...props}>\n      <Path\n        d=\"M1 1l7 7-7 7\"\n        stroke={mode === 'light' ? '#B9B9B9' : '#fff'}\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const Cross = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={52} height={50} viewBox=\"0 0 52 50\" fill=\"none\" {...props}>\n      <Path\n        d=\"M29.487 0v15.835c0 3.958 1.847 4.678 3.694 4.678h18.101M29.487 50V34.166c0-3.96 1.816-4.679 3.632-4.679h18.163M20.513 0v15.835c0 3.958-1.739 4.678-3.477 4.678H0M20.513 50V34.166c0-3.96-1.71-4.679-3.418-4.679H0\"\n        stroke={fill}\n        strokeWidth={3.5}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const Community = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n\n  return (\n    // @ts-ignore\n    <Svg width={96} height={43} fill=\"none\" {...props}>\n      <Path\n        d=\"M48.014 0c8.408 0 15.638 5.074 18.79 12.327A17.07 17.07 0 0178.883 7.34C88.333 7.34 96 15.007 96 24.46c0 9.449-7.67 17.117-17.119 17.117a17.121 17.121 0 01-14.763-8.45c-3.75 4.768-9.571 7.832-16.104 7.832-6.344 0-12.016-2.888-15.773-7.42a17.244 17.244 0 01-14.995 8.729C7.723 42.267 0 34.54 0 25.02 0 15.496 7.72 7.773 17.246 7.773c4.444 0 8.675 1.698 11.89 4.758C32.24 5.168 39.524 0 48.014 0zM30.52 31.128a20.372 20.372 0 01-2.986-10.649c0-1.774.226-3.498.652-5.141l-.149-.163a14.573 14.573 0 00-10.792-4.762c-8.067 0-14.607 6.54-14.607 14.607 0 3.331 1.12 6.529 3.192 9.118a10.17 10.17 0 01.909-1.567c1.923-2.66 3.556-.913 5.282-2.344.361-.3.561-.7.659-1.146a8.186 8.186 0 01-1.182-1.16c-1.463-1.753-2.194-4.034-2.194-6.303 0-4.394 2.982-9.042 7.755-9.042s7.755 4.648 7.755 9.042c0 2.269-.733 4.55-2.194 6.304a8.316 8.316 0 01-1.18 1.16c.095.446.295.844.655 1.145 1.725 1.431 3.359-.315 5.284 2.344.407.564.751 1.21 1.042 1.859a14.473 14.473 0 002.003-3.104l.096-.198zm-11.457-.77a6.794 6.794 0 01-4.008-.003 4.464 4.464 0 01-1.35 1.904c-1.858 1.538-4.045.774-4.831 1.86-.43.595-.781 1.357-1.06 2.06a14.569 14.569 0 009.43 3.448c3.341 0 6.55-1.128 9.15-3.217-.298-.775-.68-1.64-1.153-2.29-.783-1.087-2.972-.323-4.827-1.861a4.446 4.446 0 01-1.351-1.901zm2.956-10.313c-1.891-.038-2.502-.414-4.252.828-1.832 1.298-3.524 1.997-5.75 1.845.179 1.278.674 2.525 1.503 3.52 1.971 2.366 5.106 2.366 7.077 0 1.067-1.281 1.578-2.967 1.578-4.62a7.907 7.907 0 00-.156-1.572zm-9.926.028c1.628.116 2.856-.435 4.2-1.384 2.144-1.515 2.507-1.33 4.611-1.286-.89-1.269-2.24-2.188-3.845-2.188-2.682 0-4.472 2.43-4.966 4.858zm55.674-5.008a20.482 20.482 0 01.726 5.415c0 3.731-1 7.231-2.748 10.245l.091.184a14.511 14.511 0 001.705 2.665c.262-.554.564-1.101.918-1.592 1.903-2.632 3.521-.895 5.248-2.326.367-.305.569-.715.665-1.172-2.22-1.765-3.358-4.61-3.358-7.409 0-4.352 2.952-8.96 7.682-8.96 4.728 0 7.682 4.608 7.682 8.96 0 2.799-1.14 5.647-3.358 7.41.094.456.297.866.666 1.171 1.724 1.43 3.343-.305 5.246 2.326.413.572.759 1.227 1.054 1.882a14.5 14.5 0 003.444-9.405c0-8.037-6.512-14.551-14.55-14.551a14.516 14.516 0 00-10.979 5.002l-.134.155zm20.24 20.726c-.296-.778-.68-1.648-1.153-2.304-.794-1.096-2.958-.324-4.806-1.854a4.413 4.413 0 01-1.344-1.904 6.645 6.645 0 01-2.008.309 6.692 6.692 0 01-2.01-.31 4.4 4.4 0 01-1.344 1.905c-1.847 1.532-4.01.757-4.805 1.854-.433.6-.786 1.367-1.065 2.072a14.507 14.507 0 009.408 3.449c3.334 0 6.537-1.128 9.127-3.217zM80.12 14.935c.363 1.786 1.418 3.51 3.316 3.737-.535-1.632-1.682-3.148-3.316-3.737zm3.686 6.324c-2.38-.077-3.93-1.033-5.108-3.032-1.18 1.998-2.728 2.955-5.108 3.032.098 2.885 1.882 6.21 5.108 6.21s5.009-3.325 5.108-6.21zm-9.847-2.587c1.899-.227 2.952-1.954 3.316-3.739-1.636.59-2.782 2.107-3.316 3.74zm-22.415-5.037c2.289 2.312 3.53 1.982 3.53 5.797a9.525 9.525 0 01-.189 1.895c.36.042.69.062 1 .062 1.402 0 3.316-.572 3.316-2.25v-5.004c0-3.122-2.871-5.191-6.527-6.137-3.014-.778-6.513-.795-9.527-.015-3.553.92-6.317 2.97-6.317 6.152v5.005c0 1.694 1.953 2.249 3.317 2.249.309 0 .64-.02.998-.062a9.615 9.615 0 01-.189-1.895c0-3.857.881-3.124 3.526-5.795 3.158-3.182 3.905-3.182 7.062-.002zm2.554 9.964a8.394 8.394 0 01-.913 1.42c.11 1.005.514 1.658 1.305 2.205 2.614 1.784 4.568-.618 7.135 3.177.25.374.489.78.707 1.192a18.057 18.057 0 003.805-11.114c0-10.01-8.11-18.121-18.122-18.121-10.006 0-18.12 8.114-18.12 18.122 0 4.186 1.422 8.042 3.806 11.108.218-.411.453-.815.705-1.187 2.54-3.758 4.228-1.388 7.058-3.133.83-.5 1.272-1.258 1.381-2.252a8.131 8.131 0 01-.911-1.417c-.65.101-1.244.148-1.787.148-2.732 0-5.675-1.523-5.675-4.607v-5.005c0-4.465 3.537-7.248 8.087-8.427 3.388-.879 7.316-.861 10.703.015 4.648 1.2 8.296 4.015 8.296 8.412v5.005c0 3.084-2.941 4.607-5.673 4.607-.546 0-1.139-.047-1.787-.148zm-2.906 3.159a6.268 6.268 0 01-6.355 0 5.17 5.17 0 01-2.116 2.501c-2.943 1.826-4.732.047-6.362 2.46-.363.535-.69 1.153-.973 1.76A18.077 18.077 0 0048.014 38.6a18.07 18.07 0 0012.628-5.12 12.868 12.868 0 00-.971-1.761c-1.67-2.467-3.623-.577-6.514-2.555-.876-.59-1.578-1.411-1.965-2.406zm-1.316-11.464c-2.167-2.186-1.557-2.186-3.726.002-1.676 1.692-2.836 1.76-2.836 4.136 0 1.654.553 3.142 1.447 4.206 1.813 2.164 4.697 2.168 6.509 0 .893-1.064 1.447-2.552 1.447-4.206 0-2.37-1.056-2.337-2.84-4.138z\"\n        fill={mode === 'light' ? '#33f' : '#fff'}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const Hand = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={65} height={45} viewBox=\"0 0 65 45\" fill=\"none\" {...props}>\n      <Path\n        d=\"M36.365 45c-.867 0-1.739-.083-2.6-.251l-19.06-4.65c-1.348-.413-2.142-.305-3.467.44l-2.254 1.286a1.19 1.19 0 01-1.626-.447l-7.203-12.7a1.19 1.19 0 01.445-1.62l5.716-3.266c2.099-1.204 4.968-2.853 9.334-1.754l23.288 6.365a4.412 4.412 0 013.104 3.417l14.572-8.332a5.256 5.256 0 017.147 1.984c1.421 2.498.542 5.702-1.962 7.14L43.092 43.226A13.651 13.651 0 0136.365 45zm-23.027-7.522c.608 0 1.264.1 2 .328l18.937 4.618c2.576.502 5.309.054 7.642-1.27l18.703-10.61a2.869 2.869 0 001.071-3.895 2.867 2.867 0 00-3.899-1.09l-16.26 9.3a4.392 4.392 0 01-1.632 1.633 4.494 4.494 0 01-3.007.504l-11.77-2.81c-1.153-.217-2.282-.23-3.212-.028-.578.123-1.115.338-1.86.743a1.191 1.191 0 01-1.14-2.091c.67-.366 1.49-.767 2.5-.981 1.25-.272 2.67-.264 4.209.028l11.758 2.807c.431.074.928-.007 1.34-.24a2.051 2.051 0 00.761-2.779 2.04 2.04 0 00-1.192-.95l-23.24-6.353c-3.41-.857-5.605.404-7.545 1.516l-4.689 2.678 6.028 10.63 1.224-.699c1.049-.591 2.064-.99 3.273-.99zM33.422 19.02c-3.36 0-5.991-4.139-5.991-9.423 0-5.286 2.631-9.425 5.991-9.425 3.362 0 5.995 4.14 5.995 9.425 0 5.284-2.633 9.423-5.995 9.423zm0-16.467c-1.707 0-3.61 2.893-3.61 7.044 0 4.15 1.903 7.042 3.61 7.042 1.71 0 3.614-2.893 3.614-7.042 0-4.15-1.905-7.044-3.614-7.044z\"\n        fill={fill}\n      />\n      <Path\n        d=\"M33.218 19.116a1.19 1.19 0 01-.072-2.378l4.32-.269c1.783-.002 3.688-2.895 3.688-7.045S39.249 2.38 37.54 2.38l-4.2.076c-.648-.024-1.2-.511-1.211-1.169A1.19 1.19 0 0133.298.076L37.453 0c3.45 0 6.082 4.139 6.082 9.424 0 5.285-2.633 9.424-5.995 9.424l-4.246.266c-.026.002-.051.002-.076.002z\"\n        fill={fill}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from \"react\";\nimport Svg, { Mask, Path } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const Homelessness = memo(() => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#3333FF' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={31} height={34} viewBox=\"0 0 31 34\" fill=\"none\">\n      <Path\n        d=\"M7.37351 23.4489C7.34529 22.9665 6.93133 22.5983 6.44891 22.6265C5.96648 22.6547 5.59828 23.0687 5.62649 23.5511L7.37351 23.4489ZM7.05044 32.9109L6.17693 32.962C6.20399 33.4247 6.58703 33.7859 7.05044 33.7859V32.9109ZM11.1675 32.9109V33.7859C11.4054 33.7859 11.633 33.6891 11.798 33.5177C11.9629 33.3463 12.051 33.1151 12.0419 32.8774L11.1675 32.9109ZM5.62649 23.5511L6.17693 32.962L7.92395 32.8599L7.37351 23.4489L5.62649 23.5511ZM7.05044 33.7859H11.1675V32.0359H7.05044V33.7859ZM12.0419 32.8774L11.3744 15.4665L9.62564 15.5335L10.2932 32.9445L12.0419 32.8774Z\"\n        fill={fill}\n      />\n      <Mask id=\"path-3-inside-1\" fill=\"white\">\n        <Path d=\"M25.0366 8.0248C27.266 8.0248 29.0732 6.22839 29.0732 4.0124C29.0732 1.79641 27.266 0 25.0366 0C22.8072 0 21 1.79641 21 4.0124C21 6.22839 22.8072 8.0248 25.0366 8.0248Z\" />\n      </Mask>\n      <Path\n        d=\"M25.0366 8.0248C27.266 8.0248 29.0732 6.22839 29.0732 4.0124C29.0732 1.79641 27.266 0 25.0366 0C22.8072 0 21 1.79641 21 4.0124C21 6.22839 22.8072 8.0248 25.0366 8.0248Z\"\n        stroke={fill}\n        strokeWidth={3.5}\n        mask=\"url(#path-3-inside-1)\"\n      />\n      <Path\n        d=\"M21.8777 10.7469C21.3933 9.14162 20.8282 7.53702 19.8592 6.09277C18.8097 4.80887 17.2759 3.60497 14.9348 4.48709C12.4323 5.53099 7.50757 7.37595 5.89329 8.09808C2.03887 9.9307 2.58665 12.9147 2.58316 12.9133L1 32.911H4.94289L5.81746 27.4205L7.48468 16.4962L9.69489 15.5846L17.9215 12.1912L19.8592 19H24C23.7096 18.1744 22.2819 12.0849 21.8777 10.7469Z\"\n        stroke={fill}\n        strokeWidth={1.75}\n        strokeLinejoin=\"round\"\n      />\n      <Path\n        d=\"M16 19L17.7748 31.678C17.9179 32.4558 18.491 33 19.2072 33H24.8648C25.581 33 26.2255 32.4558 26.2255 31.678L28 19H16Z\"\n        stroke={fill}\n        strokeWidth={1.75}\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from \"react\";\nimport Svg, { Defs, G, Mask, Path, Use } from \"react-native-svg\";\n\nexport const Home = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width=\"19px\" height=\"22px\" viewBox=\"0 0 19 22\" {...props}>\n    <Defs>\n      <Path\n        d=\"M0,6.17681 C0,5.45047 0.393784,4.78123 1.02871,4.42849 L7.96893,0.572816 C8.60511,0.219382 9.38307,0.239419 10.0002,0.625134 L16.06,4.4125 C16.6448,4.77798 17,5.41892 17,6.1085 L17,18 C17,19.1046 16.1046,20 15,20 L2,20 C0.89543,20 0,19.1046 0,18 L0,6.17681 Z\"\n        id=\"path-1\"\n      />\n    </Defs>\n    <G\n      id=\"Page-1\"\n      stroke=\"none\"\n      strokeWidth={1}\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    >\n      <G id=\"home\" transform=\"translate(1.000000, 1.000000)\">\n        <Mask id=\"mask-2\" fill=\"white\">\n          <Use xlinkHref=\"#path-1\" />\n        </Mask>\n        <Use id=\"Shape\" stroke={props.color} xlinkHref=\"#path-1\" />\n      </G>\n    </G>\n  </Svg>\n));\n","import React, { memo } from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const Legal = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={33} height={26} viewBox=\"0 0 33 26\" fill=\"none\" {...props}>\n      <Path\n        d=\"M32.573 13.844l-5.02-11.057a.71.71 0 00-.647-.42H19.37A3.166 3.166 0 0016.319 0a3.166 3.166 0 00-3.05 2.368H5.73a.702.702 0 00-.647.398l-5.02 11.05c-.043.142-.064.206-.064.313 0 3.157 2.574 5.738 5.731 5.738s5.731-2.567 5.731-5.724c0-.107-.021-.2-.064-.292L6.833 3.79h6.407a3.126 3.126 0 002.368 2.41v14.726h-3.172a2.255 2.255 0 00-2.232 2.233v1.493c0 .391.34.683.74.683h10.68c.39 0 .739-.292.739-.683V23.16a2.255 2.255 0 00-2.233-2.233h-3.1V6.2a3.146 3.146 0 002.367-2.41h6.407L21.239 13.85a.695.695 0 00-.064.292 5.742 5.742 0 005.731 5.73 5.741 5.741 0 005.731-5.73.704.704 0 00-.064-.299zM5.731 4.828L9.65 13.46H1.813l3.918-8.632zm0 13.652c-2.133 0-3.91-1.607-4.252-3.598h8.497c-.334 1.991-2.112 3.598-4.245 3.598zm15.21 4.679v.754h-9.315v-.754a.83.83 0 01.81-.81h7.694a.83.83 0 01.81.81zM16.319 4.864c-.953 0-1.721-.775-1.721-1.721 0-.946.775-1.72 1.72-1.72.946 0 1.721.774 1.721 1.72s-.768 1.72-1.72 1.72zm14.505 8.596h-7.836l3.918-8.632 3.918 8.632zm-3.918 5.02c-2.133 0-3.91-1.607-4.252-3.598h8.497c-.334 1.991-2.112 3.598-4.245 3.598z\"\n        fill={fill}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const Logo = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n\n  if (mode === 'dark') {\n    return (\n      // @ts-ignore\n      <Svg width={45} height={22} viewBox=\"0 0 45 22\" fill=\"none\" {...props}>\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 7.29c0 3.99 2.85 6.84 6.66 6.84 2.82 0 3.99-1.26 4.5-1.98h.36v2.4c0 2.4-1.41 3.72-3.9 3.72-1.899 0-3.007-.956-3.325-2.282l-3.854 1.157c.83 2.974 3.571 4.666 7.179 4.666 4.47 0 7.86-2.55 7.86-7.5V6.96c0-4.11-3.27-7.02-7.68-6.96C5.24.06 2 2.94 2 7.29zm7.74 3.75c-2.25 0-3.78-1.47-3.78-3.75 0-2.28 1.59-3.75 3.78-3.75 2.19 0 3.78 1.41 3.78 3.75 0 2.28-1.53 3.75-3.78 3.75zM23.79.42l-5.4 9.48h4.14l2.94-5.28h.36v16.8h3.96v-21h-6zm7.755 9.48l5.4-9.48h6v21h-3.96V4.62h-.36l-2.94 5.28h-4.14z\"\n          fill=\"#EDEDED\"\n        />\n        <Path fill=\"#33F\" d=\"M0 11h45v4H0z\" />\n      </Svg>\n    );\n  }\n\n  return (\n    // @ts-ignore\n    <Svg width={45} height={22} viewBox=\"0 0 45 22\" fill=\"none\" {...props}>\n      <Path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2 7.29c0 3.99 2.85 6.84 6.66 6.84 2.82 0 3.99-1.26 4.5-1.98h.36v2.4c0 2.4-1.41 3.72-3.9 3.72-1.899 0-3.007-.956-3.325-2.282l-3.854 1.157c.83 2.974 3.571 4.666 7.179 4.666 4.47 0 7.86-2.55 7.86-7.5V6.96c0-4.11-3.27-7.02-7.68-6.96C5.24.06 2 2.94 2 7.29zm7.74 3.75c-2.25 0-3.78-1.47-3.78-3.75 0-2.28 1.59-3.75 3.78-3.75 2.19 0 3.78 1.41 3.78 3.75 0 2.28-1.53 3.75-3.78 3.75zM23.79.42l-5.4 9.48h4.14l2.94-5.28h.36v16.8h3.96v-21h-6zm7.755 9.48l5.4-9.48h6v21h-3.96V4.62h-.36l-2.94 5.28h-4.14z\"\n        fill=\"#000\"\n      />\n      <Path fill=\"#33F\" d=\"M0 11h45v4H0z\" />\n    </Svg>\n  );\n});\n","import React, { memo } from \"react\";\nimport Svg, { G, Path, Mask } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const MentalHealth = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#3333ff' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={29} height={36} viewBox=\"0 0 29 36\" fill=\"none\" {...props}>\n      <Path\n        d=\"M18.2639 6.4104C19.0549 6.56065 19.832 6.86895 20.5242 7.37004C23.2082 9.22971 23.8725 12.9234 21.9973 15.6044C19.6122 19.0241 14.8862 19.878 11.4635 17.5084C8.04372 15.1233 7.18982 10.3973 9.55942 6.97461C9.86789 6.53504 10.4675 6.42396 10.9071 6.73243C11.3466 7.0409 11.4577 7.64051 11.1493 8.08008C9.37813 10.6362 10.0099 14.163 12.566 15.9341C15.1221 17.7052 18.6489 17.0735 20.42 14.5174C21.6783 12.7155 21.2206 10.2181 19.4187 8.95987C17.6169 7.70163 15.1195 8.1593 13.8613 9.96116C13.1285 11.0272 13.381 12.4893 14.4471 13.2221C14.9583 13.5763 15.5758 13.7097 16.1909 13.6015C16.806 13.4934 17.3383 13.1446 17.6925 12.6333C17.8025 12.4775 17.8378 12.2913 17.8052 12.1245C17.7756 11.9421 17.678 11.7789 17.5192 11.6844C17.2075 11.4645 16.7747 11.543 16.5548 11.8548C16.2463 12.2944 15.6467 12.4054 15.2072 12.097C14.7676 11.7885 14.6565 11.1889 14.965 10.7493C15.7834 9.57099 17.4153 9.27032 18.6092 10.0917C19.1766 10.4887 19.5601 11.0919 19.6875 11.7749C19.8149 12.458 19.6668 13.153 19.2668 13.7359C18.6226 14.6741 17.6377 15.2905 16.522 15.4964C15.4062 15.7023 14.2643 15.4532 13.329 14.7935C11.3994 13.4467 10.9246 10.7853 12.2559 8.85273C13.661 6.86987 16.0304 5.98615 18.2639 6.4104Z\"\n        fill={fill}\n      />\n      <Mask id=\"path-2-inside-1\" fill=\"white\">\n        <Path d=\"M16.8256 0.0378956C17.8949 0.0882988 18.9561 0.274115 19.9768 0.578617L22.1833 1.45392C23.8751 2.30304 25.359 3.49498 26.4467 4.93566C28.2316 7.30453 29.2072 11.4474 28.7162 14.5729C28.2314 17.6593 26.4517 21.2138 25.4016 22.6442C24.4892 23.884 24.0488 24.7715 24.0151 25.4379C23.8857 27.9845 24.4495 30.4638 26.025 34.2673L26.2889 34.6805C26.4856 34.9882 26.3972 35.3983 26.0916 35.5964C25.7857 35.7947 25.901 35.7478 25.1818 35.729L8.97283 35.7064C8.83652 35.7064 8.69908 35.6639 8.5812 35.5758C8.28925 35.3578 8.2281 34.9427 8.44469 34.6488L8.78871 34.1818C9.04543 33.6645 9.14491 33.4464 9.22855 32.7092C9.36238 31.5376 9.13796 30.2766 8.90514 29.5525C8.87324 29.4724 8.60792 29.2659 8.26538 29.2605C7.92405 29.2541 7.5654 29.2894 7.18561 29.3268L7.171 29.3283L7.16237 29.3291L7.16166 29.3292C6.31802 29.4121 5.26834 29.5154 3.85078 29.2532C3.2866 29.1482 2.80441 28.8231 2.49229 28.3377C1.84551 27.3312 2.05976 25.897 2.24505 25.1315C2.25393 25.0942 2.25722 25.0697 2.25839 25.0556C2.2373 25.0243 2.19037 24.9678 2.15462 24.9248C1.96434 24.696 1.64587 24.313 1.657 23.7194L1.65608 23.6975C1.65001 23.5398 1.65463 23.3343 1.7204 23.1086C1.13698 22.2202 1.55642 21.3302 1.70685 21.0111L1.70686 21.011L1.74896 20.9208C1.77022 20.8738 1.7889 20.8305 1.80533 20.7906C1.30044 20.6219 0.183928 20.1973 0.0180839 18.9477C-0.123053 17.9304 0.572505 16.911 1.73486 15.3536L1.98423 15.0185C2.80795 13.9048 2.75118 13.3667 2.58686 12.9873C2.03759 11.7218 2.27518 10.9075 2.52674 10.0453L2.5268 10.0451C2.5912 9.8246 2.63716 9.54832 2.69534 9.19849C2.72487 9.02098 2.75689 8.82868 2.79537 8.61905C3.09532 6.9839 4.06018 3.94394 7.15192 1.95766C9.53212 0.428742 12.5154 -0.162989 16.8256 0.0378956Z\" />\n      </Mask>\n      <Path\n        d=\"M16.8256 0.0378956C17.8949 0.0882988 18.9561 0.274115 19.9768 0.578617L22.1833 1.45392C23.8751 2.30304 25.359 3.49498 26.4467 4.93566C28.2316 7.30453 29.2072 11.4474 28.7162 14.5729C28.2314 17.6593 26.4517 21.2138 25.4016 22.6442C24.4892 23.884 24.0488 24.7715 24.0151 25.4379C23.8857 27.9845 24.4495 30.4638 26.025 34.2673L26.2889 34.6805C26.4856 34.9882 26.3972 35.3983 26.0916 35.5964C25.7857 35.7947 25.901 35.7478 25.1818 35.729L8.97283 35.7064C8.83652 35.7064 8.69908 35.6639 8.5812 35.5758C8.28925 35.3578 8.2281 34.9427 8.44469 34.6488L8.78871 34.1818C9.04543 33.6645 9.14491 33.4464 9.22855 32.7092C9.36238 31.5376 9.13796 30.2766 8.90514 29.5525C8.87324 29.4724 8.60792 29.2659 8.26538 29.2605C7.92405 29.2541 7.5654 29.2894 7.18561 29.3268L7.171 29.3283L7.16237 29.3291L7.16166 29.3292C6.31802 29.4121 5.26834 29.5154 3.85078 29.2532C3.2866 29.1482 2.80441 28.8231 2.49229 28.3377C1.84551 27.3312 2.05976 25.897 2.24505 25.1315C2.25393 25.0942 2.25722 25.0697 2.25839 25.0556C2.2373 25.0243 2.19037 24.9678 2.15462 24.9248C1.96434 24.696 1.64587 24.313 1.657 23.7194L1.65608 23.6975C1.65001 23.5398 1.65463 23.3343 1.7204 23.1086C1.13698 22.2202 1.55642 21.3302 1.70685 21.0111L1.70686 21.011L1.74896 20.9208C1.77022 20.8738 1.7889 20.8305 1.80533 20.7906C1.30044 20.6219 0.183928 20.1973 0.0180839 18.9477C-0.123053 17.9304 0.572505 16.911 1.73486 15.3536L1.98423 15.0185C2.80795 13.9048 2.75118 13.3667 2.58686 12.9873C2.03759 11.7218 2.27518 10.9075 2.52674 10.0453L2.5268 10.0451C2.5912 9.8246 2.63716 9.54832 2.69534 9.19849C2.72487 9.02098 2.75689 8.82868 2.79537 8.61905C3.09532 6.9839 4.06018 3.94394 7.15192 1.95766C9.53212 0.428742 12.5154 -0.162989 16.8256 0.0378956Z\"\n        stroke={fill}\n        strokeWidth={3.5}\n        mask=\"url(#path-2-inside-1)\"\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from \"react\";\nimport Svg, { Path, Mask } from \"react-native-svg\";\n\nexport const Phone = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={32} height={31} fill=\"none\" {...props}>\n    <Mask\n      id=\"prefix__a\"\n      // @ts-ignore\n      maskUnits=\"userSpaceOnUse\"\n      x={0}\n      y={0}\n      width={32}\n      height={31}\n      fill=\"#000\"\n    >\n      <Path fill=\"#fff\" d=\"M0 0h32v31H0z\" />\n      <Path d=\"M28.04 19.86c-2.07-1.66-3.8-1.7-5.93-.18-.36.25-1.4 1.18-1.52 1.28-.2.18-.63.29-.88.23-.02 0-1.9-.52-5.51-3.95-3.55-3.49-4.08-5.3-4.08-5.32-.06-.24.05-.67.23-.86.1-.11 1.07-1.12 1.33-1.46 1.58-2.07 1.52-3.74-.19-5.74C10.33 2.5 8.9 1.09 7.04 1c-1.4-.06-2.84.63-4.38 2.12A5.76 5.76 0 001.22 8.8c.1.54 1.32 6.64 8.09 13.18 6.76 6.54 13.07 7.72 13.63 7.81a6.6 6.6 0 001.68.22c1.58 0 3.11-.57 4.18-1.6 1.55-1.5 2.26-2.88 2.2-4.24-.1-1.8-1.55-3.18-2.96-4.3zm0 7.8a5.14 5.14 0 01-4.84 1.1h-.06c-.06-.02-6.38-1.07-13.06-7.53C3.4 14.78 2.3 8.66 2.29 8.59l-.01-.05a4.73 4.73 0 011.14-4.67C4.74 2.6 5.92 2 7 2.05c1.43.07 2.66 1.3 3.66 2.48 1.4 1.64 1.44 2.76.15 4.44-.19.25-.97 1.08-1.25 1.38a2.11 2.11 0 00-.49 1.82c.02.08.52 1.96 4.1 5.54l.55.54c3.7 3.45 5.65 3.94 5.74 3.96a2.31 2.31 0 001.88-.47c.3-.28 1.16-1.03 1.42-1.22 1.75-1.24 2.9-1.2 4.6.15 1.23.97 2.49 2.16 2.56 3.54.05 1.05-.56 2.18-1.88 3.45z\" />\n    </Mask>\n    <Path\n      d=\"M28.04 19.86c-2.07-1.66-3.8-1.7-5.93-.18-.36.25-1.4 1.18-1.52 1.28-.2.18-.63.29-.88.23-.02 0-1.9-.52-5.51-3.95-3.55-3.49-4.08-5.3-4.08-5.32-.06-.24.05-.67.23-.86.1-.11 1.07-1.12 1.33-1.46 1.58-2.07 1.52-3.74-.19-5.74C10.33 2.5 8.9 1.09 7.04 1c-1.4-.06-2.84.63-4.38 2.12A5.76 5.76 0 001.22 8.8c.1.54 1.32 6.64 8.09 13.18 6.76 6.54 13.07 7.72 13.63 7.81a6.6 6.6 0 001.68.22c1.58 0 3.11-.57 4.18-1.6 1.55-1.5 2.26-2.88 2.2-4.24-.1-1.8-1.55-3.18-2.96-4.3zm0 7.8a5.14 5.14 0 01-4.84 1.1h-.06c-.06-.02-6.38-1.07-13.06-7.53C3.4 14.78 2.3 8.66 2.29 8.59l-.01-.05a4.73 4.73 0 011.14-4.67C4.74 2.6 5.92 2 7 2.05c1.43.07 2.66 1.3 3.66 2.48 1.4 1.64 1.44 2.76.15 4.44-.19.25-.97 1.08-1.25 1.38a2.11 2.11 0 00-.49 1.82c.02.08.52 1.96 4.1 5.54l.55.54c3.7 3.45 5.65 3.94 5.74 3.96a2.31 2.31 0 001.88-.47c.3-.28 1.16-1.03 1.42-1.22 1.75-1.24 2.9-1.2 4.6.15 1.23.97 2.49 2.16 2.56 3.54.05 1.05-.56 2.18-1.88 3.45z\"\n      fill={props.color}\n    />\n    <Path\n      d=\"M28.04 19.86c-2.07-1.66-3.8-1.7-5.93-.18 0 0 0 0 0 0s0 0 0 0c-.36.25-1.4 1.18-1.52 1.28-.2.18-.63.29-.88.23-.02 0-1.9-.52-5.51-3.95-3.55-3.49-4.08-5.3-4.08-5.32-.06-.24.05-.67.23-.86.1-.11 1.07-1.12 1.33-1.46 0 0 0 0 0 0 1.58-2.07 1.52-3.74-.19-5.74C10.33 2.5 8.9 1.09 7.04 1c-1.4-.06-2.84.63-4.38 2.12A5.76 5.76 0 001.22 8.8c.1.54 1.32 6.64 8.09 13.18 6.76 6.54 13.07 7.72 13.63 7.81a6.6 6.6 0 001.68.22c1.58 0 3.11-.57 4.18-1.6 1.55-1.5 2.26-2.88 2.2-4.24-.1-1.8-1.55-3.18-2.96-4.3zm0 7.8a5.14 5.14 0 01-4.84 1.1h-.06c-.06-.02-6.38-1.07-13.06-7.53C3.4 14.78 2.3 8.66 2.29 8.59l-.01-.05a4.73 4.73 0 011.14-4.67C4.74 2.6 5.92 2 7 2.05c1.43.07 2.66 1.3 3.66 2.48 1.4 1.64 1.44 2.76.15 4.44 0 0 0 0 0 0-.19.25-.97 1.08-1.25 1.38a2.11 2.11 0 00-.49 1.82c.02.08.52 1.96 4.1 5.54l.55.54c3.7 3.45 5.65 3.94 5.74 3.96a2.31 2.31 0 001.88-.47c.3-.28 1.16-1.03 1.42-1.22 1.75-1.24 2.9-1.2 4.6.15 1.23.97 2.49 2.16 2.56 3.54.05 1.05-.56 2.18-1.88 3.45z\"\n      stroke={props.color}\n      mask=\"url(#prefix__a)\"\n    />\n  </Svg>\n));\n","import React, {memo} from \"react\";\nimport Svg, { Path, Mask } from \"react-native-svg\";\n\nexport const Noise = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={33} height={30} viewBox=\"0 0 33 30\" fill=\"none\" {...props}>\n    <Path\n      d=\"M21.487 21.669a1.064 1.064 0 01-1.032-1.236c.342-2.188-.537-2.933-1.753-3.963-.928-.786-1.98-1.677-2.254-3.27-.132-.77-.479-3.435.607-5.37.5-.89 1.305-1.551 2.393-1.963.752-.284 1.631-.45 2.687-.505 1.035-.054 1.973.119 2.79.514.896.433 1.625 1.123 2.167 2.05 1.198 2.053.408 4.527-.291 6.21a1.035 1.035 0 01-1.368.564 1.076 1.076 0 01-.552-1.4c.827-1.992.96-3.352.42-4.279-.644-1.101-1.645-1.601-3.06-1.527-1.796.094-2.9.552-3.376 1.4-.586 1.044-.561 2.773-.362 3.937.134.78.668 1.266 1.53 1.995.658.558 1.404 1.19 1.927 2.113.608 1.076.79 2.33.556 3.83-.082.525-.525.9-1.029.9z\"\n      fill=\"#33F\"\n    />\n    <Path\n      d=\"M20.637 29.283c-.308 0-.615-.027-.922-.08-.925-.16-1.796-.557-2.587-1.18-1.52-1.194-1.563-2.825-1.604-4.401a55.85 55.85 0 00-.016-.521 1.062 1.062 0 112.12-.077c.007.186.012.366.017.541.04 1.49.09 2.231.792 2.784.98.77 2.13.997 3.24.637 1.281-.415 2.328-1.548 2.734-2.958.108-.377.205-.75.298-1.11.35-1.348.68-2.62 1.547-4 .337-.537.695-1.054 1.042-1.555.724-1.044 1.407-2.03 1.876-3.136 1.137-2.682.996-6-.35-8.258-1.59-2.67-4.105-3.834-6.568-3.834-3.092 0-5.617.887-6.955 3.774-1.113 1.944-1.22 3.153-1.24 6.111a1.062 1.062 0 01-1.062 1.057h-.007a1.063 1.063 0 01-1.054-1.072c.021-2.991.099-4.668 1.523-7.156.786-1.373 2.14-3.404 4.026-4.044 1.3-.44 2.824-.701 4.66-.795 1.718-.089 3.226.451 4.592.992 2.02 1.01 3.044 2.426 3.907 3.875.86 1.443 1.347 3.196 1.409 5.07.058 1.774-.263 3.542-.928 5.112-.555 1.309-1.333 2.432-2.086 3.519-.334.48-.678.978-.99 1.474-.69 1.1-.967 2.167-1.288 3.402-.097.374-.198.76-.314 1.164a6.745 6.745 0 01-1.564 2.757 6.14 6.14 0 01-2.555 1.636 5.474 5.474 0 01-1.693.272z\"\n      fill=\"#33F\"\n    />\n    <Mask id=\"prefix__a\" fill=\"#fff\">\n      <Path d=\"M6.525 15.875c0 2.445-.853 4.72-2.331 6.54-.455.568-.398 1.478.17 1.933l.057.057c.626.512 1.535.455 2.047-.17 1.877-2.275 2.957-5.175 2.957-8.36 0-3.184-1.137-6.084-2.957-8.359-.512-.625-1.421-.682-2.047-.17l-.057.056c-.568.512-.682 1.365-.17 1.934 1.421 1.82 2.331 4.037 2.331 6.54z\" />\n    </Mask>\n    <Path\n      d=\"M6.525 15.875c0 2.445-.853 4.72-2.331 6.54-.455.568-.398 1.478.17 1.933l.057.057c.626.512 1.535.455 2.047-.17 1.877-2.275 2.957-5.175 2.957-8.36 0-3.184-1.137-6.084-2.957-8.359-.512-.625-1.421-.682-2.047-.17l-.057.056c-.568.512-.682 1.365-.17 1.934 1.421 1.82 2.331 4.037 2.331 6.54z\"\n      fill=\"#33F\"\n      stroke=\"#fff\"\n      strokeWidth={0.5}\n      mask=\"url(#prefix__a)\"\n    />\n    <Mask id=\"prefix__b\" fill=\"#fff\">\n      <Path d=\"M.497 20.993c.626.512 1.536.455 2.048-.17a7.903 7.903 0 001.706-4.948 7.903 7.903 0 00-1.706-4.947c-.512-.626-1.422-.683-2.048-.17a1.418 1.418 0 00-.17 1.933c.682.91 1.08 1.99 1.08 3.184 0 1.194-.398 2.332-1.08 3.185-.512.625-.398 1.478.17 1.933z\" />\n    </Mask>\n    <Path\n      d=\"M.497 20.993c.626.512 1.536.455 2.048-.17a7.903 7.903 0 001.706-4.948 7.903 7.903 0 00-1.706-4.947c-.512-.626-1.422-.683-2.048-.17a1.418 1.418 0 00-.17 1.933c.682.91 1.08 1.99 1.08 3.184 0 1.194-.398 2.332-1.08 3.185-.512.625-.398 1.478.17 1.933z\"\n      fill=\"#33F\"\n      stroke=\"#fff\"\n      strokeWidth={0.5}\n      mask=\"url(#prefix__b)\"\n    />\n  </Svg>\n));\n","import React, { memo } from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nexport const Not911 = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={34} height={33} viewBox=\"0 0 34 33\" fill=\"none\" {...props}>\n    <Path\n      d=\"M14 17.6H3V8h11v20H0M22 5v26M30 5v26\"\n      stroke=\"#000\"\n      strokeWidth={6}\n    />\n    <Path fill=\"#fff\" d=\"M3.485 32.957L1 30.473 30.803.67l2.484 2.484z\" />\n  </Svg>\n));\n","import React, { memo } from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const Poison = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={23} height={36} viewBox=\"0 0 23 36\" fill=\"none\" {...props}>\n      <Path\n        d=\"M19.295 9.408l-3.83-2.09v-1.46h.606a.607.607 0 00.607-.608V1.607A.607.607 0 0016.072 1H6.357a.607.607 0 00-.607.607V5.25a.607.607 0 00.607.607h.607v1.461l-3.83 2.09a5.463 5.463 0 00-2.848 4.797V30.75A4.255 4.255 0 004.536 35h13.357a4.255 4.255 0 004.25-4.25V14.205a5.463 5.463 0 00-2.848-4.797zm-3.83-2.09h-.608.607v0zm-8.5-5.104h8.5v2.429h-8.5V2.214zm-3.25 8.26l3.83-2.09a1.212 1.212 0 00.633-1.066v-1.46h6.072v1.46a1.214 1.214 0 00.633 1.066l3.83 2.09a4.249 4.249 0 012.215 3.73v.153H1.5v-.152a4.249 4.249 0 012.215-3.731zm17.213 18.455H1.5V15.57h19.428V28.93zm-3.035 4.857H4.536A3.04 3.04 0 011.5 30.75v-.607h19.428v.607a3.04 3.04 0 01-3.035 3.036zm-11.83-8.102l1.717 1.718a.607.607 0 00.858 0l2.576-2.576 2.576 2.576a.607.607 0 00.859 0l1.717-1.718a.607.607 0 000-.858L13.79 22.25l2.576-2.576a.607.607 0 000-.859l-1.717-1.717a.607.607 0 00-.859 0l-2.576 2.576-2.576-2.576a.607.607 0 00-.858 0l-1.718 1.717a.607.607 0 000 .859l2.576 2.576-2.576 2.576a.607.607 0 000 .858zm3.863-3.005a.608.608 0 000-.858L7.35 19.245l.859-.859 2.576 2.576a.625.625 0 00.858 0l2.577-2.576.858.859-2.576 2.576a.607.607 0 000 .858l2.576 2.576-.858.859-2.577-2.576a.607.607 0 00-.858 0l-2.576 2.576-.859-.86 2.576-2.575z\"\n        fill={fill}\n        stroke={fill}\n        strokeWidth={0.25}\n      />\n    </Svg>\n  );\n});\n","import React, {memo} from \"react\"\nimport Svg, { Path } from \"react-native-svg\"\n\nexport const Settings = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg\n    width=\"30px\"\n    viewBox=\"0 0 64 64\"\n    {...props}\n  >\n    <Path\n      fill={props.color}\n      d=\"M56.083 27.003l-5.911-.492a18.958 18.958 0 00-1.44-3.48l3.83-4.527a1 1 0 00-.056-1.353l-5.656-5.657a.998.998 0 00-1.353-.056l-4.527 3.83a18.854 18.854 0 00-3.482-1.44l-.492-5.911A1 1 0 0036 7h-8a1 1 0 00-.996.917l-.492 5.911a18.854 18.854 0 00-3.482 1.44l-4.527-3.83a.998.998 0 00-1.353.056l-5.656 5.657a1 1 0 00-.057 1.353l3.83 4.527a18.958 18.958 0 00-1.439 3.48l-5.911.492A1 1 0 007 28v8a1 1 0 00.917.997l5.911.492a18.958 18.958 0 001.44 3.48l-3.83 4.527a1 1 0 00.056 1.353l5.656 5.657a1 1 0 001.353.056l4.527-3.83a18.854 18.854 0 003.482 1.44l.492 5.911A1 1 0 0028 57h8a1 1 0 00.996-.917l.492-5.911a18.854 18.854 0 003.482-1.44l4.527 3.83a.999.999 0 001.353-.056l5.656-5.657a1 1 0 00.056-1.353l-3.83-4.527a18.958 18.958 0 001.44-3.48l5.911-.492A1 1 0 0057 36v-8a1 1 0 00-.917-.997zM55 35.08l-5.686.474a1 1 0 00-.884.743 16.928 16.928 0 01-1.772 4.283 1 1 0 00.099 1.151l3.684 4.354-4.355 4.356-4.355-3.684a.998.998 0 00-1.15-.099 16.869 16.869 0 01-4.283 1.771 1 1 0 00-.744.885L35.08 55h-6.16l-.474-5.686a1 1 0 00-.744-.885 16.869 16.869 0 01-4.282-1.77.999.999 0 00-1.151.098l-4.355 3.684-4.355-4.356 3.684-4.354a1 1 0 00.099-1.151 16.928 16.928 0 01-1.772-4.283 1 1 0 00-.884-.743L9 35.08v-6.16l5.686-.474a1 1 0 00.884-.743 16.928 16.928 0 011.772-4.283 1 1 0 00-.099-1.151l-3.684-4.354 4.355-4.356 4.355 3.684a.998.998 0 001.15.099 16.869 16.869 0 014.283-1.771 1 1 0 00.744-.885L28.92 9h6.16l.474 5.686a1 1 0 00.744.885 16.869 16.869 0 014.282 1.77.997.997 0 001.151-.098l4.355-3.684 4.355 4.356-3.684 4.354a1 1 0 00-.099 1.151 16.928 16.928 0 011.772 4.283 1 1 0 00.884.743L55 28.92z\" />\n    <Path\n      fill={props.color}\n      d=\"M32 23a9 9 0 109 9 9.01 9.01 0 00-9-9zm0 16a7 7 0 117-7 7.008 7.008 0 01-7 7z\"\n    />\n  </Svg>\n));\n","import React, {memo} from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nimport {useTheme} from '../context';\n\nexport const Violence = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={33} height={25} viewBox=\"0 0 33 25\" fill=\"none\" {...props}>\n      <Path\n        d=\"M7.686 17.085c.893 2.81 4.644 3.692 6.683 1.35 1.09 2.356 3.53 2.235 3.595 2.255v.609c0 1.484 1.219 2.692 2.745 2.692h.001c3.229-.138 4.914.421 7.09-.833.04-.023.028-.011.061-.041.035-.022.092-.052.166-.09 2.514-1.34 3.788-3.26 3.785-5.654.044-.492.412-4.854-.02-6.409-.47-1.735-2.982-5.376-3.96-6.788-1.766-2.83-4.09-.77-7.073-2.272-1.824-.915-3.577-1.297-5.583-.372-1.297.398-1.115 1.072-4.375.991-1.856-.05-3.37.017-4.36 1.73-.68 1.202-1.94 1.055-2.005 1.07C2.54 5.324 1 6.844 1 8.712v5.685c0 3.41 4.232 5.165 6.686 2.69zm20.635-.253c-.048-4.22-.018-6.816.002-8.534l.01-1.082c1.053 1.631 1.987 3.249 2.214 4.082.313 1.133.09 4.69-.024 6.02 0 2.625-1.774 3.874-3.108 4.585-.136.072-.226.12-.3.173-1.775 1.007-3.285.498-6.433.64-1.762 0-1.396-2.152-1.427-2.26.697-.252 1.462-.813 1.916-1.49 2.094 3.132 7.15 1.723 7.15-2.134zm-26.03-8.12c0-1.165.962-2.112 2.145-2.112.064-.017 2.069.159 3.13-1.72.79-1.368 2.132-1.068 4-1.068 2.507 0 3.269-.821 4.159-1.125 3.126-1.442 3.983 1.127 7.85 1.127 1.35.076 2.363-.28 3.172 1.047.2.348.315 12.059.228 12.503-.626 2.99-5.156 2.545-5.156-.525 0-.005-.003-.008-.003-.014v-6.46a.642.642 0 00-.646-.639.642.642 0 00-.645.638l.001 6.489c-.007 1.258-.94 2.473-2.614 2.564-1.435 0-2.602-1.157-2.602-2.578l-.001-.91v-5.565a.642.642 0 00-.646-.638.642.642 0 00-.646.638v.155l.001 5.415c0 2.267-2.785 3.442-4.453 1.81-.844-.824-.75-1.748-.763-1.815v-5.565a.642.642 0 00-.646-.638.642.642 0 00-.646.638v4.032c0 2.284-2.823 3.428-4.452 1.82-1.268-1.253-.567-2.492-.767-7.505z\"\n        fill={fill}\n        stroke={fill}\n        strokeWidth={0.75}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Styles } from '../constants';\nimport { Text, View } from '../components/Themed';\nimport {\n  Caret,\n  Homelessness,\n  MentalHealth,\n  Legal,\n  Poison,\n  Violence,\n} from '../svgs';\n\ntype Props = {\n  includeIcon?: true,\n  isLast?: boolean,\n  navigation: any,\n  route: {\n    btn: {\n      display: string,\n    },\n    params: object,\n  },\n};\n\n/**\n * @description Generic category link. optional icon\n */\nexport const RowLink = memo((props: Props) => {\n  const { isLast, route } = props;\n\n  return (\n    <>\n      <TouchableOpacity\n        style={styles.row}\n        onPress={() => props.navigation.navigate(\n          'PhoneNumberListScreen',\n          route.params,\n        )}>\n        {props.includeIcon && (\n          <View\n            lightColor={Styles.white}\n            darkColor={Styles.blue}\n            style={styles.marginRight10}>\n            {props.route.btn.display === 'Violence'\n              && (\n                <Violence />\n              )}\n            {props.route.btn.display === 'Mental Health'\n              && (\n                <MentalHealth />\n              )}\n            {props.route.btn.display === 'Homelessness'\n              && (\n                <Homelessness />\n              )}\n            {props.route.btn.display === 'Legal Support'\n              && (\n                <Legal />\n              )}\n            {props.route.btn.display === 'Drugs or Poisoning'\n              && (\n                <Poison />\n              )}\n          </View>\n        )}\n        <Text\n          lightColor={Styles.blue}\n          darkColor={Styles.white}\n          style={styles.text}>\n          {route.btn.display}\n        </Text>\n        <Caret />\n      </TouchableOpacity>\n      {!isLast && (\n        <View\n          style={Styles.separator}\n          lightColor={Styles.gray}\n          darkColor={Styles.white}\n        />\n      )}\n    </>\n  );\n});\n\nconst styles = StyleSheet.create({\n  marginRight10: {\n    marginRight: 10,\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 25,\n    width: '100%',\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    lineHeight: 20,\n  },\n});\n","import { StackScreenProps } from '@react-navigation/stack';\nimport React, { memo } from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Text, View } from '../components';\nimport { RootStackParamList } from '../types';\n\n/**\n * @description This component renders the 404 page.\n * Should never render if used as app, but exists for web version\n */\nconst NotFoundScreen = memo(({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) => (\n  <View style={styles.container}>\n    <Text bold style={styles.title}>This screen doesn't exist.</Text>\n    <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n      <Text style={styles.linkText}>Go to home screen!</Text>\n    </TouchableOpacity>\n  </View>\n));\n\nexport default NotFoundScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React, { memo } from 'react';\nimport { StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\nimport * as Linking from 'expo-linking';\n\nimport { Styles } from '../constants';\nimport { RowLink, Text, View } from '../components';\nimport { useTheme } from '../context';\nimport { Routes } from '../constants';\nimport { Phone } from '../svgs';\n\n/**\n * @description This component renders the landing page (the list of hotline categories)\n */\nexport const HomeScreen = memo((props: any) => {\n  const {mode} = useTheme();\n\n  return (\n    <View\n      lightColor={Styles.white}\n      darkColor={Styles.blue}\n      style={styles.container}>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <View\n          lightColor={Styles.white}\n          darkColor={Styles.orange}\n          style={styles.danger}>\n          <Text\n            bold\n            lightColor={Styles.orange}\n            darkColor={Styles.white}\n            style={styles.dangerTxt}>\n            Life-threatening emergency?\n          </Text>\n          <TouchableOpacity\n            onPress={() => {\n              Linking.openURL(`tel://911`);\n            }}>\n            <View\n              style={styles.dangerBtn}\n              lightColor={Styles.orange}\n              darkColor={Styles.white}>\n              <View\n                lightColor={Styles.orange}\n                darkColor={Styles.white}\n                style={styles.phoneWrap}>\n                <Phone\n                  color={mode === 'light' ? Styles.white : Styles.orange}\n                />\n              </View>\n              <Text\n                bold\n                lightColor={Styles.white}\n                darkColor={Styles.orange}\n                style={styles.dangerBtnTxt}>\n                Call 911\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.innerView}>\n          <Text\n            bold\n            lightColor={Styles.black}\n            darkColor={Styles.white}\n            style={styles.title}>\n            What do you need help with?\n          </Text>\n          <View\n            style={Styles.separator}\n            lightColor={Styles.gray}\n            darkColor={Styles.white}\n          />\n          {Routes.map((route, i) => (\n            <RowLink\n              key={i}\n              includeIcon\n              isLast={i === Routes.length - 1}\n              navigation={props.navigation}\n              route={route}\n            />\n          ))}\n        </View>\n        {/* <View style={styles.community}>\n          <Community\n            style={styles.marginBottom15}\n          />\n          <Text\n            lightColor={Styles.blue}\n            darkColor={Styles.white}\n            style={[styles.title, styles.marginBottom40]}>\n            Community Care Resources\n          </Text>\n          <Text\n            bold\n            lightColor={Styles.blue}\n            darkColor={Styles.white}\n            style={styles.trusted}>\n            Trusted sources, vetted through community experience\n          </Text>\n          <View\n            style={Styles.separator}\n            lightColor={Styles.gray}\n            darkColor={Styles.white}\n          />\n          {Communities.map((route, i) => (\n            <RowLink\n              key={i}\n              navigation={props.navigation}\n              route={route}\n            />\n          ))}\n        </View> */}\n      </ScrollView>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  dangerTxt: {\n    fontSize: 18,\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  danger: {\n    display: 'flex',\n    padding: 20,\n    width: '100%',\n  },\n  dangerBtnTxt: {\n    alignSelf: 'stretch',\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n  },\n  dangerBtn: {\n    alignItems: 'center',\n    borderRadius: 6,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    width: '100%',\n  },\n  phoneWrap: {\n    position: 'absolute',\n    left: 15,\n  },\n  community: {\n    padding: 20,\n    paddingTop: 30,\n  },\n  communityTxt: {\n    fontSize: 20,\n  },\n  container: {\n    flex: 1,\n  },\n  innerView: {\n    padding: 20,\n    paddingTop: 40,\n  },\n  marginBottom15: {\n    marginBottom: 15,\n  },\n  marginBottom30: {\n    marginBottom: 30,\n  },\n  marginVertical30: {\n    marginVertical: 30,\n  },\n  title: {\n    fontSize: 28,\n    lineHeight: 34,\n    marginBottom: 32,\n  },\n  blue: {\n    color: Styles.blue,\n  },\n  marginBottom40: {\n    marginBottom: 40,\n  },\n  trusted: {\n    fontSize: 16,\n    lineHeight: 20,\n    marginBottom: 20,\n  },\n  marginRight10: {\n    marginRight: 10,\n  },\n});\n","import React, { memo } from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport * as Linking from 'expo-linking';\n\nimport { Text, View } from '../components';\nimport { Styles } from '../constants';\nimport { Cross, Hand } from '../svgs';\n\n/**\n * @description This component renders the about page\n */\nexport const AboutScreen = memo(() => (\n  <View\n    lightColor={Styles.white}\n    darkColor={Styles.blue}\n    style={styles.container}>\n    <ScrollView showsVerticalScrollIndicator={false}>\n      <View style={styles.marginBottom15}>\n        <Cross />\n      </View>\n      <Text\n        bold\n        lightColor={Styles.black}\n        darkColor={Styles.white}\n        style={styles.title}>\n        About Not911\n      </Text>\n      <Text\n        lightColor=\"#353535\"\n        darkColor={Styles.white}\n        style={styles.paragraph}>\n        Not 911 is a list of community-based groups that offer preventative services and strategies for issues related to mental health, homelessness, legal aid and other topics.\n      </Text>\n      <Text\n        bold\n        lightColor=\"#353535\"\n        darkColor={Styles.white}\n        style={[styles.paragraph, styles.marginBottom40]}>\n        These are not organizations that should be used in a life-threatening emergency. If someone is experiencing a life-threatening emergency, call 911 immediately.\n      </Text>\n      <Text\n        bold\n        lightColor={Styles.black}\n        darkColor={Styles.white}\n        style={styles.title}>\n        About Us\n      </Text>\n      <Text\n        lightColor=\"#353535\"\n        darkColor={Styles.white}\n        style={styles.paragraph}>\n        The Code Cooperative is a community of people who learn, use, and build technology to create life changing possibilities for individuals and communities impacted by incarceration.\n      </Text>\n      <Text\n        lightColor=\"#353535\"\n        darkColor={Styles.white}\n        style={[styles.paragraph, styles.marginBottom40]}>\n        We also build software for purpose-driven organizations and careers for our communities.\n      </Text>\n      <View style={styles.marginBottom15}>\n        <Hand />\n      </View>\n      <Text\n        bold\n        lightColor={Styles.black}\n        darkColor={Styles.white}\n        style={styles.title}>\n        Interested in hiring us?\n      </Text>\n      <Text\n        lightColor={Styles.blue}\n        darkColor={Styles.white}\n        style={[styles.paragraph, styles.marginBottom60]}>\n        hello@codecooperative.org\n      </Text>\n      <Text\n        bold\n        lightColor=\"#353535\"\n        darkColor={Styles.white}\n        style={styles.builtBy}\n        onPress={() => {\n          Linking.openURL('https://github.com/codecooperative/project-not-911');\n        }}>\n        Built by Code Cooperative\n      </Text>\n      <Text\n        lightColor=\"#353535\"\n        darkColor={Styles.white}\n        style={[styles.builtBy, styles.marginBottom40]}>\n        Tomás Correa, Ross Patton, Ashley Newcomer, Army Armstead, Lauren Wilkinson, Christina Entcheva, Jaclyn Perrone, Johann Diedrick\n      </Text>\n    </ScrollView>\n  </View>\n));\n\nconst styles = StyleSheet.create({\n  builtBy: {\n    fontSize: 14,\n    lineHeight: 18,\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  marginBottom15: {\n    marginBottom: 15,\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 10,\n  },\n  paragraph: {\n    fontSize: 20,\n    lineHeight: 26,\n    marginBottom: 20,\n  },\n  marginBottom40: {\n    marginBottom: 40,\n  },\n  marginBottom60: {\n    marginBottom: 60,\n  },\n});\n","import React, { memo, useState } from 'react';\nimport { StyleSheet, Switch } from 'react-native';\nimport { Dimensions } from 'react-native';\nimport Constants from 'expo-constants';\n\n// import * as Linking from 'expo-linking';\n\nimport { useTheme } from '../context';\nimport { Text, View } from '../components';\nimport { Styles } from '../constants';\n// import { Cross, Hand } from '../svgs';\n\n/**\n * @description This component is for adjusting user settings, such as theme\n */\nexport const SettingsScreen = memo(() => {\n  const {mode, toggle} = useTheme();\n  const [isEnabled, setIsEnabled] = useState(mode === 'dark');\n\n  const toggleSwitch = () => {\n    setIsEnabled(previousState => !previousState);\n    toggle();\n  };\n\n  return (\n    <View\n      lightColor={Styles.white}\n      darkColor={Styles.blue}\n      style={styles.container}>\n      <View style={styles.row}>\n        <Text style={{fontWeight: 'bold', marginRight: 10}}>\n          Toggle Dark Mode\n        </Text>\n        <Switch\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n          thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n          ios_backgroundColor=\"#3e3e3e\"\n          onValueChange={toggleSwitch}\n          value={isEnabled}\n        />\n      </View>\n      {Constants?.platform?.web && (\n        <>\n          <View\n            style={Styles.separator}\n            lightColor={Styles.gray}\n            darkColor={Styles.white}\n          />\n          <View style={styles.row}>\n            <Text style={{fontWeight: 'bold', marginRight: 10}}>\n              Add to Home Screen\n            </Text>\n            <Text style={{fontWeight: 'bold', marginRight: 10}}>\n              A2HS is a web app feature that allows you to install this site on your phone as a mobile app. This will allow you to launch Not911 from your home screen and enables it to work offline.\n            </Text>\n            <Text style={{fontWeight: 'bold', marginRight: 10}}>\n              Below are instructions on how to install this app manually if the install banner doesn&apos;t appear for you.\n            </Text>\n          </View>\n        </>\n      )}\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: Dimensions.get('window').height,\n    padding: 20,\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    marginVertical: 10,\n    paddingVertical: 10,\n  },\n  marginRight: {\n    marginRight: 15,\n  },\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nimport { Styles } from '../constants';\nimport { useTheme } from '../context';\nimport { HomeScreen } from '../screens/HomeScreen';\nimport { AboutScreen } from '../screens/AboutScreen';\nimport { SettingsScreen } from '../screens/SettingsScreen';\nimport { About, Home, Logo, Settings } from '../svgs';\nimport {\n  BottomTabParamList,\n  TabOneParamList,\n  TabTwoParamList,\n  TabThreeParamList,\n} from '../types';\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\n/**\n * @description This component renders the bottom navigation for the home/about pages\n */\nexport default function BottomTabNavigator() {\n  const theme: {mode: 'light' | 'dark'} = useTheme();\n  const {mode} = theme;\n\n  console.log('theme => ', theme);\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Home\"\n      tabBarOptions={{ activeTintColor: Styles[mode].tint }}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={TabOneNavigator}\n        options={{\n          tabBarIcon: ({color}) => <Home color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"About\"\n        component={TabTwoNavigator}\n        options={{\n          tabBarIcon: ({color}) => <About color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Settings\"\n        component={TabThreeNavigator}\n        options={{\n          tabBarIcon: ({color}) => <Settings color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst TabOneStack = createStackNavigator<TabOneParamList>();\n\nfunction TabOneNavigator() {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n\n  return (\n    <TabOneStack.Navigator>\n      <TabOneStack.Screen\n        name=\"HomeScreen\"\n        component={HomeScreen}\n        options={{\n          headerTitle: () => (\n            <View\n              style={{\n                alignSelf: 'center',\n                display: 'flex',\n                justifyContent: 'center',\n              }}>\n              <Logo />\n            </View>\n          ),\n          headerStyle: {\n            backgroundColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomWidth: 0,\n          },\n          headerTintColor: '#fff',\n        }}\n      />\n    </TabOneStack.Navigator>\n  );\n}\n\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\n\nfunction TabTwoNavigator() {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n\n  return (\n    <TabTwoStack.Navigator>\n      <TabTwoStack.Screen\n        name=\"AboutScreen\"\n        component={AboutScreen}\n        options={{\n          headerTitle: () => (\n            <View\n              style={{\n                alignSelf: 'center',\n                display: 'flex',\n                justifyContent: 'center',\n              }}>\n              <Logo />\n            </View>\n          ),\n          headerStyle: {\n            backgroundColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomWidth: 0,\n          },\n          headerTintColor: '#fff',\n        }}\n      />\n    </TabTwoStack.Navigator>\n  );\n}\n\nconst TabThreeStack = createStackNavigator<TabThreeParamList>();\n\nfunction TabThreeNavigator() {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n\n  return (\n    <TabThreeStack.Navigator>\n      <TabThreeStack.Screen\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n        options={{\n          headerTitle: () => (\n            <View\n              style={{\n                alignSelf: 'center',\n                display: 'flex',\n                justifyContent: 'center',\n              }}>\n              <Logo />\n            </View>\n          ),\n          headerStyle: {\n            backgroundColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomWidth: 0,\n          },\n          headerTintColor: '#fff',\n        }}\n      />\n    </TabThreeStack.Navigator>\n  );\n}\n","import * as Linking from 'expo-linking';\n\n/**\n * @description This is necessary for any links to work natively\n * Any new screens/routes we add to the app, must also be defined here\n */\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          Home: {\n            screens: {\n              HomeScreen: 'app',\n            },\n          },\n          About: {\n            screens: {\n              AboutScreen: 'app/about',\n            },\n          },\n          Settings: {\n            screens: {\n              SettingsScreen: 'app/settings',\n            },\n          },\n          PhoneNumberList: {\n            screens: {\n              PhoneNumberListScreen: 'app/numbers/:section',\n            },\n          },\n        },\n      },\n      NotFound: '*',\n    },\n  },\n};\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, TouchableOpacity } from 'react-native';\nimport * as Linking from 'expo-linking';\n\nimport { PhoneNumbers } from '../../constants';\nimport { Text, View } from '../../components';\nimport { Caret, Phone } from '../../svgs';\nimport { Styles } from '../../constants';\nimport { Props } from './types';\n\n/**\n * @description This component renders the PhoneNumber Screen\n * ie, any phone number list we pass into it basically\n */\nexport const PhoneNumberListScreen = (props: Props) => {\n  const {route} = props;\n  const numbers = PhoneNumbers[route.params.section];\n\n  if (!(numbers instanceof Array)) return null;\n\n  // lets always have 'crisis' hotlines at the top\n  // crisis meaning, mental health breakdowns, etc, but not an 'emergency'\n  // wherein someone is currently in physical danger\n  const sortedNumbers = numbers.sort(entry => {\n    if (entry.crisis) return -1;\n    return 1;\n  });\n\n  return (\n    <View\n      darkColor={Styles.black}\n      lightColor={Styles.white}\n      style={styles.container}>\n      <View\n        darkColor={Styles.black}\n        lightColor={Styles.white}\n        style={styles.backBtn}>\n        <Caret style={styles.rotate} />\n        <Text\n          bold\n          darkColor={Styles.white}\n          lightColor={Styles.blue}\n          onPress={() => props.navigation.navigate('Root')}>\n          Back\n        </Text>\n      </View>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {sortedNumbers.map((entry: any, i) => (\n          <View\n            key={i}\n            darkColor=\"#000\"\n            lightColor={Styles.white}\n            style={styles.item}>\n            <Text\n              bold\n              darkColor={Styles.white}\n              lightColor={Styles.blue}\n              style={[\n                styles.hours,\n                styles.centerTxt,\n                entry.crisis && {color: Styles.orange},\n              ]}>\n              {entry.hours}\n            </Text>\n            <Text\n              bold\n              darkColor={Styles.white}\n              style={[styles.centerTxt, styles.title]}>\n              {entry.display}\n            </Text>\n            <Text\n              darkColor={Styles.white}\n              style={[styles.centerTxt, styles.tel]}>\n              {entry.tel}\n            </Text>\n            <TouchableOpacity\n              style={[\n                styles.phoneWrap,\n                entry.crisis && {backgroundColor: Styles.orange}\n              ]}\n              onPress={() => {\n                Linking.openURL(`tel://${entry.tel}`);\n              }}>\n              <Phone color={Styles.white} />\n            </TouchableOpacity>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  backBtn: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: 18,\n    paddingBottom: 30,\n    paddingLeft: 30,\n  },\n  rotate: {\n    marginRight: 10,\n    transform: [{ rotate: '180deg' }],\n  },\n  container: {\n    flex: 1,\n    paddingTop: 60,\n  },\n  centerTxt: {\n    textAlign: 'center',\n  },\n  item: {\n    marginBottom: 30,\n    paddingBottom: 30,\n  },\n  paddingTop30: {\n    paddingTop: 30,\n  },\n  title: {\n    fontSize: 28,\n    marginHorizontal: 'auto',\n    paddingHorizontal: 20,\n    paddingBottom: 10,\n  },\n  phone: {\n    height: 30,\n    width: 30,\n  },\n  marginBottom30: {\n    marginBottom: 30,\n  },\n  hours: {\n    fontSize: 18,\n    paddingBottom: 5,\n  },\n  phoneWrap: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: Styles.blue,\n    borderRadius: 1000,\n    flex: 1,\n    height: 70,\n    justifyContent: 'center',\n    padding: 20,\n    width: 70,\n  },\n  tel: {\n    marginBottom: 15,\n  },\n});\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport {PhoneNumberListScreen} from '../screens/PhoneNumberListScreen';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={ colorScheme === 'light' ? DefaultTheme : DarkTheme }>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<any>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n      <Stack.Screen name=\"PhoneNumberListScreen\" component={PhoneNumberListScreen}/>\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { useFonts, Inter_400Regular, Inter_700Bold } from '@expo-google-fonts/inter';\n\nimport { AddToHomeScreen } from './components';\nimport { ThemeManager } from './context';\nimport useCachedResources from './hooks/useCachedResources';\nimport { useTheme } from './context';\nimport Navigation from './navigation';\n\nwindow.addEventListener('beforeinstallprompt', ev => {\n  console.log('beforeinstallprompt called');\n});\n\n/**\n * @description Starting point for the entire app.\n * mimics native functionality, doesn't render anything until app is fully loaded\n */\nconst AppComponent = () => {\n  const isLoadingComplete = useCachedResources();\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  let [fontsLoaded] = useFonts({\n    Inter_400Regular,\n    Inter_700Bold\n  });\n\n  if (!isLoadingComplete || !fontsLoaded) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <AddToHomeScreen />\n        <Navigation colorScheme={mode} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n\n/**\n * @description Starting point for the entire app.\n * mimics native functionality, doesn't render anything until app is fully loaded\n */\nexport default function App() {\n  return (\n    <ThemeManager>\n      <AppComponent />\n    </ThemeManager>\n  );\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/app/expo-service-worker.js', { scope: '/app/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}